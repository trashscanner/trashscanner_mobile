name: CI

on:
  pull_request:
    branches: [master]
  push:
    branches: [master]

jobs:
  lint:
    name: 🔍 Lint & Format Check
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🎨 Check formatting
        run: npm run format:check

      - name: 🔎 TypeScript check
        run: npm run typecheck

  test:
    name: 🧪 Test & Coverage
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🧪 Run tests
        run: npm test -- --coverage --watchAll=false
        continue-on-error: true

      - name: 📊 Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  build:
    name: 🏗️ Build
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔧 Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: 📦 Install web dependencies
        run: npx expo install react-dom react-native-web

      - name: 🏗️ Build web version
        run: npx expo export --platform web

      - name: 📤 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: dist/
          retention-days: 7

  preview:
    name: 🚀 Deploy Preview
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔧 Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: 🚀 Publish to Expo
        run: |
          npx expo publish --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: 💬 Comment PR with preview
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const message = `### 🎉 Preview Ready!\n\n📱 Scan QR code in Expo Go app:\n\n\`\`\`\nexp://exp.host/@${process.env.EXPO_USERNAME}/${process.env.EXPO_SLUG}?release-channel=pr-${prNumber}\n\`\`\``;

            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: message
            });

  quality-gate:
    name: ✅ Quality Gate
    runs-on: ubuntu-latest
    needs: [lint, test, build]
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔍 SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
